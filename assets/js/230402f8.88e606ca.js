"use strict";(self.webpackChunknimbus_docusaurus_template=self.webpackChunknimbus_docusaurus_template||[]).push([[156],{97579:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=i(87462),r=(i(67294),i(3905));const o={title:"Client Diversity and Network Decentralisation For Ethereum",description:"Nimbus is a suite of Ethereum client implementations designed to be as lightweight, easy to use, and adaptive as possible.",sidebar_position:1,hide_table_of_contents:!0},a=void 0,s={unversionedId:"index",id:"index",title:"Client Diversity and Network Decentralisation For Ethereum",description:"Nimbus is a suite of Ethereum client implementations designed to be as lightweight, easy to use, and adaptive as possible.",source:"@site/about/index.md",sourceDirName:".",slug:"/",permalink:"/about/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Client Diversity and Network Decentralisation For Ethereum",description:"Nimbus is a suite of Ethereum client implementations designed to be as lightweight, easy to use, and adaptive as possible.",sidebar_position:1,hide_table_of_contents:!0},sidebar:"defaultSidebar",next:{title:"Nimbus clients",permalink:"/about/clients"}},l={},c=[{value:"Motivation",id:"motivation",level:3},{value:"Nimbus history",id:"nimbus-history",level:3}],u={toc:c};function d(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Nimbus was created to promote client diversity and network decentralisation on Ethereum, believing that blockchain technology's full transformative potential can only be realised if running Ethereum infrastructure is widely accessible."),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"motivation"},"Motivation"),(0,r.kt)("p",null,"Ethereum's security\u2014its resistance to external threats and censorship\u2014comes from its decentralisation. We believe that lowering the barrier to network participation will result in greater decentralisation and, consequently, a more resilient network. As such, we are building each of the three Nimbus clients to be as lightweight, secure, and easy to use as possible."),(0,r.kt)("p",null,"The Nimbus consensus client, along with the still-in-development execution and light clients, is designed to perform on a range of systems, including Raspberry Pis and mobile devices, lowering the barrier to entry to run Ethereum's infrastructure. Meanwhile, our resource-conserving optimizations benefit those operating more powerful systems by freeing resources for other tasks without compromising on reward performance."),(0,r.kt)("p",null,"Client projects that were earlier to the network than Nimbus have typically developed for higher specification hardware, as one would expect from the first client implementations. While these other implementations make for a more diverse client ecosystem, and their R&D efforts have pushed the space forward tremendously, there remains a gap for an Ethereum client tailored to lower specification devices that encourage increased network decentralisation while delivering the same level of stability and reward performance expected from any Ethereum client. Nimbus fills that gap."),(0,r.kt)("p",null,"In addition to striving for maximum accessibility via lighter client implementations, Nimbus' design goals are to provide an architecture that makes it simple to embed Nimbus into other software. For example, the verified web3 proxy enables decentralised applications to verify data received from external RPC endpoints. Consequently, Nimbus reduces reliance on third-party software and service providers that introduce potential vulnerabilities through single points of failure."),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"nimbus-history"},"Nimbus history"),(0,r.kt)("p",null,'Status, the creator of the Ethereum-based decentralised messaging application, first announced Nimbus in August 2018 as a client implementation research project focused on sharding, light clients, and next-generation Ethereum technologies, with a goal of addressing scalability and accessibility concerns. It was inspired by a vision of the future in which Ethereum "lives" on millions of embedded systems around the world rather than a few thousand powerful computers.'),(0,r.kt)("p",null,"At its creation, Nimbus' goal was to research and build a client light enough to run on such resource-restricted devices, and modular enough to allow for rapid iteration and implementation of research. Initially, the team planned to develop an energy and compute-efficient, mobile-first client for the full web3 tech stack, with decentralised logic, decentralised storage, and decentralised messaging."),(0,r.kt)("p",null,"However, as research into the latter two branches slowed, Nimbus narrowed its focus to crafting high-quality, lightweight Ethereum implementations to promote decentralisation and strengthen the network against single-client failures."),(0,r.kt)("p",null,"Nimbus is supported by the ",(0,r.kt)("a",{parentName:"p",href:"https://free.technology/"},"Institute of Free Technology")," as a member of its startup portfolio."))}d.isMDXComponent=!0},3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>m});var n=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(i),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return i?n.createElement(h,a(a({ref:t},u),{},{components:i})):n.createElement(h,a({ref:t},u))}));function m(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<o;c++)a[c]=i[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}p.displayName="MDXCreateElement"}}]);